[{"/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/index.js":"1","/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/App.js":"2","/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/reportWebVitals.js":"3","/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/components/transactions.js":"4","/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/components/view.js":"5","/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/components/addTrancation.js":"6","/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/components/search.js":"7","/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/components/comments.js":"8"},{"size":542,"mtime":1607882077467,"results":"9","hashOfConfig":"10"},{"size":197,"mtime":1607895087969,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1607879094953,"results":"12","hashOfConfig":"10"},{"size":3015,"mtime":1608580933205,"results":"13","hashOfConfig":"10"},{"size":3836,"mtime":1608581286936,"results":"14","hashOfConfig":"10"},{"size":3235,"mtime":1608583171898,"results":"15","hashOfConfig":"10"},{"size":397,"mtime":1608050500211,"results":"16","hashOfConfig":"10"},{"size":581,"mtime":1608504458224,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"2jpnml",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/index.js",[],["37","38"],"/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/App.js",[],"/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/reportWebVitals.js",[],"/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/components/transactions.js",[],"/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/components/view.js",["39","40"],"import React, { useState } from 'react'\nimport { Table, Button, Container, Modal, Header, Form, TextArea } from 'semantic-ui-react'\n\nconst View = (props) => {\n\n    const{ transactions, deleteHandler } = props\n    const [open, setOpen ] = useState(false)\n    const [comment, setComment] = useState('')\n\n    const commentChangeHandler = (e) => {\n      setComment(e.target.value)\n    }\n\n    const commentSubmitHandler = (id) =>{\n      fetch('http://localhost:3000/comments', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accepts': 'application.json'\n        },\n        body: JSON.stringify({\n          content: comment,\n          transaction_id: id\n        })\n      })\n      .then(res => res.json())\n      .then(comment => props.addComment(comment))\n      setOpen(false)\n      setComment('')\n    }\n\n    return(\n        <div>\n          <Container fluid>\n            <Table celled>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Date</Table.HeaderCell>\n                        <Table.HeaderCell>Amount</Table.HeaderCell>\n                        <Table.HeaderCell>Location</Table.HeaderCell>\n                        <Table.HeaderCell>Category</Table.HeaderCell>\n                        <Table.HeaderCell>Add Comment</Table.HeaderCell>\n                        <Table.HeaderCell>Remove</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {transactions.map(transaction =>\n                        <Table.Row>\n                            <Table.Cell>{transaction.date}</Table.Cell>\n                            <Table.Cell>{transaction.amount}</Table.Cell>\n                            <Table.Cell>{transaction.location}</Table.Cell>\n                            <Table.Cell>{transaction.category}</Table.Cell>\n                            <Table.Cell textAlign='center'>\n                                <Modal\n                                  onClose={() => setOpen(false)}\n                                  onOpen={() => setOpen(true)}\n                                  open={open}\n                                  trigger={<Button color='blue'>Add Comment</Button>}\n                                >\n                                  <Modal.Header>Write a Comment</Modal.Header>\n                                  <Modal.Content>\n                                    <Modal.Description>\n\n                                          <TextArea onChange={commentChangeHandler}/>\n\n                                    </Modal.Description>\n                                  </Modal.Content>\n                                  <Modal.Actions>\n                                    <Button color='black' onClick={() => setOpen(false)}>\n                                      Cancel\n                                    </Button>\n                                    <Button\n                                      content=\"Submit\"\n                                      labelPosition='right'\n                                      icon='checkmark'\n                                      onClick={() => commentSubmitHandler(transaction.id)}\n                                      positive\n                                    />\n                                  </Modal.Actions>\n                                </Modal>\n                            </Table.Cell>\n                            <Table.Cell textAlign='center'>\n                                <Button id={transaction.id} onClick={() => deleteHandler(transaction.id)} color='red'>Remove</Button>\n                            </Table.Cell>\n                        </Table.Row>\n                    )}\n                </Table.Body>\n            </Table>\n          </Container>\n        </div>\n    )\n}\n\nexport default View\n","/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/components/addTrancation.js",["41","42"],"/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/components/search.js",[],"/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/components/comments.js",["43","44"],"import React from 'react'\nimport { Button, Comment, Form, Header, Container, Segment } from 'semantic-ui-react'\n\nconst Comments  = (props) => {\n\n  return(\n    <div>\n        <Segment>\n          <Container fluid>\n            <Header as='h3'>Comments</Header>\n            <Comment>\n              {props.comments.map( comment =>\n                <Comment.Content>\n                  <Comment.Text>{comment.content}</Comment.Text>\n                </Comment.Content>\n              )}\n            </Comment>\n          </Container>\n      </Segment>\n    </div>\n  )\n}\n\nexport default Comments\n",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":2,"column":43,"nodeType":"51","messageId":"52","endLine":2,"endColumn":49},{"ruleId":"49","severity":1,"message":"53","line":2,"column":51,"nodeType":"51","messageId":"52","endLine":2,"endColumn":55},{"ruleId":"49","severity":1,"message":"54","line":8,"column":12,"nodeType":"51","messageId":"52","endLine":8,"endColumn":16},{"ruleId":"49","severity":1,"message":"55","line":37,"column":11,"nodeType":"51","messageId":"52","endLine":37,"endColumn":22},{"ruleId":"49","severity":1,"message":"56","line":2,"column":10,"nodeType":"51","messageId":"52","endLine":2,"endColumn":16},{"ruleId":"49","severity":1,"message":"53","line":2,"column":27,"nodeType":"51","messageId":"52","endLine":2,"endColumn":31},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'date' is assigned a value but never used.","'dateHandler' is assigned a value but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]