[{"/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/index.js":"1","/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/App.js":"2","/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/reportWebVitals.js":"3","/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/components/transactions.js":"4","/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/components/view.js":"5","/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/components/addTrancation.js":"6","/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/components/search.js":"7","/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/components/comments.js":"8","/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/categoryOptions.js":"9","/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/components/monthOptions.js":"10","/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/components/graph.js":"11","/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/components/yearOptions.js":"12"},{"size":542,"mtime":1607882077467,"results":"13","hashOfConfig":"14"},{"size":197,"mtime":1607895087969,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1607879094953,"results":"16","hashOfConfig":"14"},{"size":5806,"mtime":1611629285121,"results":"17","hashOfConfig":"14"},{"size":7060,"mtime":1613071852677,"results":"18","hashOfConfig":"14"},{"size":2700,"mtime":1613070698328,"results":"19","hashOfConfig":"14"},{"size":414,"mtime":1609966712478,"results":"20","hashOfConfig":"14"},{"size":581,"mtime":1608583271885,"results":"21","hashOfConfig":"14"},{"size":886,"mtime":1611630395878,"results":"22","hashOfConfig":"14"},{"size":754,"mtime":1611629285119,"results":"23","hashOfConfig":"14"},{"size":1148,"mtime":1611630413324,"results":"24","hashOfConfig":"14"},{"size":157,"mtime":1611629285122,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"2jpnml",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/index.js",[],["54","55"],"/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/App.js",[],"/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/reportWebVitals.js",[],"/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/components/transactions.js",["56"],"import React from 'react'\nimport { useState, useEffect } from 'react'\nimport View from './view'\nimport AddTransaction from './addTrancation'\nimport Search from './search'\nimport Graph from './graph'\nimport { monthOptions } from './monthOptions'\nimport { yearOptions } from './yearOptions'\nimport { Header, Radio, Dropdown } from 'semantic-ui-react'\n\nconst Transactions = () => {\n\n    const [ transactions, setTransactions ] = useState([])\n    const [ viewBy, setViewBy ] = useState('None')\n    const [ search, setSearch ] = useState('')\n    const [ month, setMonth ] = useState( monthOptions[new Date().getMonth() + 1].value)\n    const [ year, setYear ] = useState(new Date().getFullYear())\n\n    useEffect(() => {\n        fetch('http://localhost:3000/transactions')\n        .then(res => res.json())\n        .then(transactions => {\n            setTransactions(transactions)\n        })\n    }, [])\n\n    const addTransaction = (transaction) => {\n        setTransactions([...transactions, transaction])\n    }\n\n    const updateComment = (trans) => {\n        let newTransactions = transactions.map( transaction => {\n            if(transaction.id === trans.id){\n             return {...transaction, comments: trans.comments}\n            } \n            return transaction\n        })\n        setTransactions(newTransactions)\n    }\n\n    const deleteHandler = (id) => {\n        fetch(`http://localhost:3000/transactions/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n        .then(() => {\n           let updatedTransactions = [...transactions]\n           setTransactions(updatedTransactions.filter(trans => trans.id !== id))\n        })\n    }\n\n    const viewByHandler = (e) => {\n        setViewBy(e.target.innerText)\n    }\n\n    const searchHandler = (e) => {\n        setSearch(e.target.value)\n    }\n\n    const monthHandler = (e) => {\n        setMonth(e.target.innerText)\n    }\n\n    const yearHandler = (e) => {\n        setYear(e.target.innerText)\n    }\n\n    let spreadTrans = [...transactions]\n\n    spreadTrans = spreadTrans.filter(trans => trans.location.toLowerCase().includes(search.toLowerCase()))\n\n    if(viewBy === 'Date'){\n        spreadTrans.sort((a,b) => new Date(a.date) < new Date(b.date) ? 1 : -1)\n    } else if\n      (viewBy === 'Amount'){\n          spreadTrans.sort((a,b) => a.amount - b.amount)\n    }\n\n    if (month === 'January'){\n        spreadTrans = spreadTrans.filter( trans => new Date(trans.date).getMonth() === 0)\n    }\n    else if (month === 'February'){\n        spreadTrans = spreadTrans.filter( trans => new Date(trans.date).getMonth() === 1)\n    }\n    else if (month === 'March'){\n        spreadTrans = spreadTrans.filter( trans => new Date(trans.date).getMonth() === 2)\n    }\n    else if (month === 'April'){\n        spreadTrans = spreadTrans.filter( trans => new Date(trans.date).getMonth() === 3)\n    }\n    else if (month === 'May'){\n        spreadTrans = spreadTrans.filter( trans => new Date(trans.date).getMonth() === 4)\n    }\n    else if (month === 'June'){\n        spreadTrans = spreadTrans.filter( trans => new Date(trans.date).getMonth() === 5)\n    }\n    else if (month === 'July'){\n        spreadTrans = spreadTrans.filter( trans => new Date(trans.date).getMonth() === 6)\n    }\n    else if (month === 'August'){\n        spreadTrans = spreadTrans.filter( trans => new Date(trans.date).getMonth() === 7)\n    }\n    else if (month === 'September'){\n        spreadTrans = spreadTrans.filter( trans => new Date(trans.date).getMonth() === 8)\n    }\n    else if (month === 'October'){\n        spreadTrans = spreadTrans.filter( trans => new Date(trans.date).getMonth() === 9)\n    }\n    else if (month === 'November'){\n        spreadTrans = spreadTrans.filter( trans => new Date(trans.date).getMonth() === 10)\n    }\n    else if (month === 'December'){\n        spreadTrans = spreadTrans.filter( trans => new Date(trans.date).getMonth() === 11)\n    }\n   \n    if( year ){\n        spreadTrans = spreadTrans.filter( trans => new Date(trans.date).getFullYear() == year )\n    }\n   \n    return(\n        <>\n            <Header as='h1' textAlign='center'>Transaction Ledger</Header>\n            <div>\n                <Header as='h5' textAlign='center'>View By</Header>\n                <div className='radio'>\n                    <Radio onClick={viewByHandler} name='radioGroup' label='None' value='none' checked={viewBy === 'None'} className='radio'/>\n                    <Radio onClick={viewByHandler} name='radioGroup' label='Date' value='date' checked={viewBy === 'Date'}  className='radio' />\n                    <Radio onClick={viewByHandler} name='radioGroup' label='Amount' value='amount' checked={viewBy === 'Amount'}  className='radio'/>\n                    <div className='dropdowns'>\n                    <Dropdown \n                    text={month}\n                    selection\n                    options={monthOptions}\n                    value={month}\n                    onChange={monthHandler}\n                    />\n                    <Dropdown \n                    text={year}\n                    selection\n                    options={yearOptions}\n                    value={year}\n                    onChange={yearHandler}\n                    />\n                    </div>\n                </div>\n            </div>\n            <Search\n            searchHandler={searchHandler}\n            search={search}\n            />\n            <AddTransaction \n            addTransaction={addTransaction} \n            />\n            <View\n            transactions={spreadTrans}\n            deleteHandler={deleteHandler}\n            updateComment={updateComment}\n            month={month}\n            />\n            <Graph transactions={spreadTrans}/>\n        </>\n    )\n}\n\nexport default Transactions\n","/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/components/view.js",[],"/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/components/addTrancation.js",[],"/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/components/search.js",[],"/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/components/comments.js",["57","58"],"import React from 'react'\nimport { Button, Comment, Form, Header, Container, Segment } from 'semantic-ui-react'\n\nconst Comments  = (props) => {\n\n  return(\n    <div>\n        <Segment>\n          <Container fluid>\n            <Header as='h3'>Comments</Header>\n            <Comment>\n              {props.comments.map( comment =>\n                <Comment.Content>\n                  <Comment.Text>{comment.content}</Comment.Text>\n                </Comment.Content>\n              )}\n            </Comment>\n          </Container>\n      </Segment>\n    </div>\n  )\n}\n\nexport default Comments\n",["59","60"],"/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/categoryOptions.js",[],"/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/components/monthOptions.js",[],"/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/components/graph.js",[],"/Users/kevinneyer/practice/reactPractice_12.13.20/react-practice-12.13.20/src/components/yearOptions.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":119,"column":87,"nodeType":"67","messageId":"68","endLine":119,"endColumn":89},{"ruleId":"69","severity":1,"message":"70","line":2,"column":10,"nodeType":"71","messageId":"72","endLine":2,"endColumn":16},{"ruleId":"69","severity":1,"message":"73","line":2,"column":27,"nodeType":"71","messageId":"72","endLine":2,"endColumn":31},{"ruleId":"61","replacedBy":"74"},{"ruleId":"63","replacedBy":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.",["76"],["77"],"no-global-assign","no-unsafe-negation"]